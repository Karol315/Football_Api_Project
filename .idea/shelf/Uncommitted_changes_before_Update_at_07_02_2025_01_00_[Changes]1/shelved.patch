Index: src/main/java/Vizualization/demoapp/FootballApplication.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Vizualization.demoapp;\r\n\r\nimport Vizualization.Exceptions.NoInternetConnectionException;\r\nimport Vizualization.Interfaces.TeamFetcher;\r\nimport Vizualization.Interfaces.TeamOpener;\r\nimport Vizualization.TeamWindow;\r\nimport com.google.gson.Gson;\r\nimport javafx.application.Application;\r\nimport javafx.beans.property.SimpleIntegerProperty;\r\nimport javafx.beans.property.SimpleStringProperty;\r\nimport javafx.collections.FXCollections;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.control.*;\r\nimport javafx.scene.layout.VBox;\r\nimport javafx.stage.Modality;\r\nimport javafx.stage.Stage;\r\nimport okhttp3.OkHttpClient;\r\nimport okhttp3.Request;\r\nimport okhttp3.Response;\r\nimport ScrapeModule.data.DataLoader;\r\nimport ScrapeModule.scrapper.Entry;\r\nimport ServerResp.Responses.TeamResponse;\r\nimport ServerResp.Wrappers.TeamVenueWrapper;\r\nimport ServerResp.SimpleObjects.Team;\r\n\r\nimport java.util.List;\r\n\r\npublic class FootballApplication extends Application implements TeamOpener {\r\n\r\n    private static final String KEY = \"3a8e79e75eef3edc965de9344d41dd01\";  // Wstaw swój klucz API\r\n    Stage currentStage;\r\n\r\n    @Override\r\n    public void start(Stage stage) {\r\n        this.currentStage=stage;\r\n        DataLoader.uploadData();\r\n        List<Entry> premierLeagueEntries = DataLoader.loadScrappedData(\"database/premier_league.csv\");\r\n        List<Entry> laligaEntries = DataLoader.loadScrappedData(\"database/laliga.csv\");\r\n        List<Entry> bundesligaEntries = DataLoader.loadScrappedData(\"database/bundesliga.csv\");\r\n        List<Entry> ekstraklasaEntries = DataLoader.loadScrappedData(\"database/ekstraklasa.csv\");\r\n\r\n        TabPane tabPane = new TabPane();\r\n        tabPane.getTabs().addAll(\r\n                createLeagueTab(\"Premier League\", premierLeagueEntries),\r\n                createLeagueTab(\"LaLiga\", laligaEntries),\r\n                createLeagueTab(\"Bundesliga\", bundesligaEntries),\r\n                createLeagueTab(\"Ekstraklasa\", ekstraklasaEntries)\r\n        );\r\n\r\n        Scene scene = new Scene(tabPane, 1000, 700);\r\n        stage.setTitle(\"Football League Tables\");\r\n        stage.setScene(scene);\r\n        stage.show();\r\n\r\n\r\n    }\r\n\r\n    private Tab createLeagueTab(String leagueName, List<Entry> entries) {\r\n        TableView<Entry> tableView = createTableView(entries);\r\n        Tab tab = new Tab(leagueName, tableView);\r\n        tab.setClosable(false);\r\n\r\n        // Dodajemy obsługę kliknięcia na wiersz tabeli\r\n        tableView.setRowFactory(tv -> {\r\n            TableRow<Entry> row = new TableRow<>();\r\n            row.setOnMouseClicked(event -> {\r\n                if (event.getClickCount() == 2 && !row.isEmpty()) {\r\n                    Entry clickedEntry = row.getItem();\r\n                    openClubDetails(clickedEntry, currentStage);\r\n                }\r\n            });\r\n            return row;\r\n        });\r\n\r\n        return tab;\r\n    }\r\n\r\n    private TableView<Entry> createTableView(List<Entry> entries) {\r\n        TableView<Entry> table = new TableView<Entry>();\r\n\r\n        TableColumn<Entry, String> clubNameCol = new TableColumn<>(\"Club Name\");\r\n        clubNameCol.setCellValueFactory(cellData -> new SimpleStringProperty(cellData.getValue().getClubName()));\r\n\r\n        TableColumn<Entry, Integer> positionCol = new TableColumn<>(\"Position\");\r\n        positionCol.setCellValueFactory(cellData -> new SimpleIntegerProperty(cellData.getValue().getTablePosition()).asObject());\r\n\r\n        TableColumn<Entry, Integer> matchesCol = new TableColumn<>(\"Matches\");\r\n        matchesCol.setCellValueFactory(cellData -> new SimpleIntegerProperty(cellData.getValue().getMatchesPlayed()).asObject());\r\n\r\n        TableColumn<Entry, Integer> pointsCol = new TableColumn<>(\"Points\");\r\n        pointsCol.setCellValueFactory(cellData -> new SimpleIntegerProperty(cellData.getValue().getPoints()).asObject());\r\n\r\n        TableColumn<Entry, Integer> winsCol = new TableColumn<>(\"Wins\");\r\n        winsCol.setCellValueFactory(cellData -> new SimpleIntegerProperty(cellData.getValue().getWins()).asObject());\r\n\r\n        TableColumn<Entry, Integer> drawsCol = new TableColumn<>(\"Draws\");\r\n        drawsCol.setCellValueFactory(cellData -> new SimpleIntegerProperty(cellData.getValue().getDraws()).asObject());\r\n\r\n        TableColumn<Entry, Integer> failuresCol = new TableColumn<>(\"Failures\");\r\n        failuresCol.setCellValueFactory(cellData -> new SimpleIntegerProperty(cellData.getValue().getFailures()).asObject());\r\n\r\n        TableColumn<Entry, String> goalBalanceCol = new TableColumn<>(\"Goal Balance\");\r\n        goalBalanceCol.setCellValueFactory(cellData -> new SimpleStringProperty(cellData.getValue().getGoalBalance()));\r\n\r\n        table.getColumns().addAll(positionCol, clubNameCol, matchesCol, pointsCol, winsCol, drawsCol, failuresCol, goalBalanceCol);\r\n        table.setColumnResizePolicy(TableView.CONSTRAINED_RESIZE_POLICY_ALL_COLUMNS);\r\n        table.setItems(FXCollections.observableArrayList(entries));\r\n\r\n        return table;\r\n    }\r\n\r\n    public void openClubDetails(Entry entry, Stage currentStage) {\r\n        String clubName = entry.getClubName();\r\n\r\n        try {\r\n            int teamId = fetchTeamId(clubName);  // Fetch team ID from API\r\n\r\n            if (teamId != -1) {\r\n                openTeamWindow(teamId, currentStage);\r\n            } else {\r\n                showErrorPopup(\"Error\", \"Team not found: \" + clubName);\r\n            }\r\n        } catch (NoInternetConnectionException e) {\r\n            showErrorPopup(\"Connection Error\", e.getMessage());\r\n        } catch (Exception e) {\r\n            showErrorPopup(\"Unexpected Error\", \"Something went wrong.\");\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    public static void main(String[] args) {\r\n        launch();\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/Vizualization/demoapp/FootballApplication.java b/src/main/java/Vizualization/demoapp/FootballApplication.java
--- a/src/main/java/Vizualization/demoapp/FootballApplication.java	
+++ b/src/main/java/Vizualization/demoapp/FootballApplication.java	
@@ -49,6 +49,7 @@
 
         Scene scene = new Scene(tabPane, 1000, 700);
         stage.setTitle("Football League Tables");
+        scene.getStylesheets().add(getClass().getResource("/css/football-theme.css").toExternalForm());
         stage.setScene(scene);
         stage.show();
 
Index: src/main/java/Vizualization/PlayerWindow.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Vizualization;\r\n\r\nimport ServerResp.SimpleObjects.Player;\r\nimport ServerResp.SimpleObjects.Statistics;\r\nimport ServerResp.Wrappers.PlayerStatisticsWrapper;\r\nimport javafx.application.Application;\r\nimport javafx.concurrent.Task;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.control.Button;\r\nimport javafx.scene.control.Label;\r\nimport javafx.scene.image.Image;\r\nimport javafx.scene.image.ImageView;\r\nimport javafx.scene.layout.AnchorPane;\r\nimport javafx.scene.layout.VBox;\r\nimport javafx.stage.Stage;\r\n\r\npublic class PlayerWindow extends Application {\r\n\r\n    private int playerId;\r\n    private Stage previousStage;\r\n\r\n    public PlayerWindow(int playerId) {\r\n        this.playerId = playerId;\r\n    }\r\n\r\n    public PlayerWindow(int playerId, Stage previousStage) {\r\n        this.playerId = playerId;\r\n        this.previousStage = previousStage;\r\n    }\r\n\r\n    @Override\r\n    public void start(Stage stage) throws Exception {\r\n        VBox vbox = new VBox(15);\r\n        vbox.setStyle(\"-fx-padding: 15; -fx-alignment: center;\");\r\n\r\n        Label nameLabel = new Label(\"Name: Loading...\");\r\n        Label ageLabel = new Label(\"Age: Loading...\");\r\n        Label leagueLabel = new Label(\"League: Loading...\");\r\n        Label teamLabel = new Label(\"Team: Loading...\");\r\n        Label goalsLabel = new Label(\"Goals: Loading...\");\r\n        Label assistsLabel = new Label(\"Assists: Loading...\");\r\n        Label yellowCardsLabel = new Label(\"Yellow Cards: Loading...\");\r\n        Label redCardsLabel = new Label(\"Red Cards: Loading...\");\r\n        Label shootingAccuracyLabel = new Label(\"Shooting Accuracy: Loading...\");\r\n        Label minutesPlayedLabel = new Label(\"Minutes Played: Loading...\");\r\n\r\n        ImageView playerImageView = new ImageView();\r\n        playerImageView.setFitWidth(100);\r\n        playerImageView.setFitHeight(100);\r\n\r\n        Button backButton = new Button(\"← Back\");\r\n        backButton.setOnAction(e -> {\r\n            if (previousStage != null) {\r\n                previousStage.show();\r\n            }\r\n            stage.close();\r\n        });\r\n\r\n        vbox.getChildren().addAll(\r\n                playerImageView, nameLabel, ageLabel, leagueLabel, teamLabel, goalsLabel, assistsLabel,\r\n                yellowCardsLabel, redCardsLabel, shootingAccuracyLabel, minutesPlayedLabel, backButton\r\n        );\r\n\r\n        InfoBubble infoBubble = new InfoBubble(\"Here is detailed information about the player from the last completed season\");\r\n\r\n        // Ustawienie pozycji InfoBubble w rogu okna\r\n        infoBubble.setLayoutX(stage.getWidth() - infoBubble.getWidth() - 10);\r\n        infoBubble.setLayoutY(10);  // 10px od górnej krawędzi\r\n\r\n        // Utworzenie głównego AnchorPane\r\n        AnchorPane root = new AnchorPane();\r\n\r\n        // Umieszczamy VBox w AnchorPane i ustawiamy, by wypełniał całą przestrzeń\r\n        AnchorPane.setTopAnchor(vbox, 0.0);\r\n        AnchorPane.setLeftAnchor(vbox, 0.0);\r\n        AnchorPane.setRightAnchor(vbox, 0.0);\r\n        AnchorPane.setBottomAnchor(vbox, 0.0);\r\n\r\n        // Umieszczamy StackPane w prawym górnym rogu\r\n        AnchorPane.setTopAnchor(infoBubble, 10.0); // Odległość od góry\r\n        AnchorPane.setRightAnchor(infoBubble, 10.0); // Odległość od prawej krawędzi\r\n\r\n        // Dodanie obiektów do głównego kontenera\r\n        root.getChildren().addAll(vbox, infoBubble);\r\n\r\n        // Ustawiamy scenę na stage – wymiary przekazywane są z obiektu stage\r\n        Scene scene = new Scene(root, stage.getWidth(), stage.getHeight());\r\n        stage.setScene(scene);\r\n        stage.setTitle(\"Player Details\");\r\n        stage.show();\r\n\r\n        Task<PlayerStatisticsWrapper> task = new Task<>() {\r\n            @Override\r\n            protected PlayerStatisticsWrapper call() throws Exception {\r\n                return new PlayerStatisticsWrapper(playerId);\r\n            }\r\n        };\r\n\r\n        task.setOnSucceeded(event -> {\r\n            PlayerStatisticsWrapper wrapper = task.getValue();\r\n            Player player = wrapper.getPlayer();\r\n            Statistics stats = wrapper.getStatistics().getFirst();\r\n\r\n            nameLabel.setText(\"Name: \" + player.getName());\r\n            ageLabel.setText(\"Age: \" + player.getAge());\r\n            leagueLabel.setText(\"League: \" + stats.getLeague().getName());\r\n            teamLabel.setText(\"Team: \" + stats.getTeam().getName());\r\n            goalsLabel.setText(\"Goals: \" + stats.getGoals().getTotal());\r\n            assistsLabel.setText(\"Assists: \" + stats.getGoals().getAssists());\r\n            yellowCardsLabel.setText(\"Yellow Cards: \" + stats.getCards().getYellow());\r\n            redCardsLabel.setText(\"Red Cards: \" + stats.getCards().getRed());\r\n            minutesPlayedLabel.setText(\"Minutes Played: \" + stats.getGames().getMinutes());\r\n\r\n            int totalShots = stats.getShots().getTotal();\r\n            int shotsOnTarget = stats.getShots().getOn();\r\n            if (totalShots > 0) {\r\n                double accuracy = (shotsOnTarget * 100.0) / totalShots;\r\n                shootingAccuracyLabel.setText(String.format(\"Shooting Accuracy: %.2f%%\", accuracy));\r\n            } else {\r\n                shootingAccuracyLabel.setText(\"Shooting Accuracy: N/A\");\r\n            }\r\n\r\n            Image playerImage = new Image(player.getPhoto());\r\n            playerImageView.setImage(playerImage);\r\n        });\r\n\r\n        task.setOnFailed(event -> nameLabel.setText(\"Failed to load player data.\"));\r\n\r\n        new Thread(task).start();\r\n    }\r\n\r\n    public static void main(String[] args) {\r\n        launch(args);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/Vizualization/PlayerWindow.java b/src/main/java/Vizualization/PlayerWindow.java
--- a/src/main/java/Vizualization/PlayerWindow.java	
+++ b/src/main/java/Vizualization/PlayerWindow.java	
@@ -85,6 +85,7 @@
 
         // Ustawiamy scenę na stage – wymiary przekazywane są z obiektu stage
         Scene scene = new Scene(root, stage.getWidth(), stage.getHeight());
+        scene.getStylesheets().add(getClass().getResource("/css/football-theme.css").toExternalForm());
         stage.setScene(scene);
         stage.setTitle("Player Details");
         stage.show();
Index: src/main/java/Vizualization/TeamWindow.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Vizualization;\r\n\r\nimport ServerResp.SimpleObjects.Player;\r\nimport ServerResp.SimpleObjects.Team;\r\nimport ServerResp.Wrappers.SquadsWrapper;\r\nimport Vizualization.Exceptions.NoInternetConnectionException;\r\nimport Vizualization.Interfaces.TeamOpener;\r\nimport javafx.application.Application;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.control.*;\r\nimport javafx.scene.image.Image;\r\nimport javafx.scene.image.ImageView;\r\nimport javafx.scene.layout.*;\r\nimport javafx.stage.Stage;\r\n\r\nimport java.util.Comparator;\r\nimport java.util.List;\r\n\r\npublic class TeamWindow extends Application implements TeamOpener {\r\n\r\n    private Stage previousStage;\r\n    private int teamId;\r\n    private SquadsWrapper teamWrapper;\r\n    private FlowPane playersBox;\r\n    private List<Player> players;\r\n\r\n    public TeamWindow(int teamId, Stage previousStage) {\r\n        this.previousStage = previousStage;\r\n        this.teamId = teamId;\r\n        this.teamWrapper = new SquadsWrapper(teamId);\r\n    }\r\n\r\n    public void start(Stage stage) throws Exception {\r\n        VBox vbox = new VBox(20);\r\n        vbox.setStyle(\"-fx-padding: 10; -fx-alignment: center;\");\r\n\r\n        ImageView teamLogo = new ImageView();\r\n        Label teamLabel = new Label(\"Team: \");\r\n\r\n        Button backButton = new Button(\"\\u2190 Back\");\r\n        backButton.setOnAction(e -> {\r\n            if (previousStage != null) {\r\n                previousStage.show();\r\n            }\r\n            stage.close();\r\n        });\r\n\r\n        playersBox = new FlowPane(15, 15);\r\n        playersBox.setStyle(\"-fx-alignment: center;\");\r\n\r\n        // Sortowanie\r\n        VBox sortBox = new VBox();\r\n        Label sortLabel = new Label(\"Sort players by:\");\r\n        ComboBox<String> sortOptions = new ComboBox<>();\r\n        sortOptions.getItems().addAll(\"Number\", \"Age\", \"Name\");\r\n        sortOptions.setValue(\"Number\");\r\n        sortOptions.setOnAction(e -> sortPlayers(sortOptions.getValue()));\r\n        sortBox.getChildren().addAll(sortLabel, sortOptions);\r\n\r\n        // Pole wyszukiwania drużyny\r\n        VBox searchBox = new VBox(5);\r\n        Label searchLabel = new Label(\"Search for another team:\");\r\n        TextField searchField = new TextField();\r\n        searchField.setPromptText(\"Enter a team name...\");\r\n        Button searchButton = new Button(\"Search\");\r\n\r\n        searchButton.setOnAction(e -> {\r\n            String newTeamName = searchField.getText().trim();\r\n            if (!newTeamName.isEmpty()) {\r\n                try {\r\n                    int newTeamId = fetchTeamId(newTeamName);\r\n                    if (newTeamId != -1) {\r\n                        openTeamWindow(newTeamId, stage);\r\n                    } else {\r\n                        showErrorPopup(\"Error\", \"Couldn't find a team: \" + newTeamName);\r\n                    }\r\n                }catch (NoInternetConnectionException ex) {\r\n                    showErrorPopup(\"Connection Error\", \"No internet connection. Please check your network and try again.\");\r\n                } catch (Exception ex) {\r\n                    throw new RuntimeException(ex);\r\n                }\r\n            }\r\n        });\r\n\r\n        searchBox.getChildren().addAll(searchLabel, searchField, searchButton);\r\n\r\n        // Dodanie elementów do głównego VBox\r\n        vbox.getChildren().addAll(teamLogo, teamLabel, playersBox);\r\n\r\n        // Pobranie danych drużyny\r\n        Team team = teamWrapper.getTeam();\r\n        players = teamWrapper.getPlayers();\r\n\r\n        teamLabel.setText(\"Team: \" + team.getName());\r\n        teamLogo.setImage(new Image(team.getLogo()));\r\n\r\n        displayPlayers();\r\n\r\n        InfoBubble infoBubble = new InfoBubble(\"Click on a player image to see additional information\");\r\n\r\n        // Układ AnchorPane\r\n        AnchorPane root = new AnchorPane();\r\n        AnchorPane.setTopAnchor(vbox, 0.0);\r\n        AnchorPane.setLeftAnchor(vbox, 0.0);\r\n        AnchorPane.setRightAnchor(vbox, 0.0);\r\n        AnchorPane.setBottomAnchor(vbox, 0.0);\r\n\r\n        AnchorPane.setTopAnchor(infoBubble, 10.0);\r\n        AnchorPane.setRightAnchor(infoBubble, 10.0);\r\n\r\n        AnchorPane.setLeftAnchor(sortBox, 10.0);\r\n        AnchorPane.setTopAnchor(sortBox, 45.0);\r\n\r\n        AnchorPane.setLeftAnchor(searchBox, 10.0);\r\n        AnchorPane.setTopAnchor(searchBox, 110.0); // Pod sortBox\r\n\r\n        AnchorPane.setLeftAnchor(backButton, 10.0);\r\n        AnchorPane.setTopAnchor(backButton, 10.0);\r\n\r\n        root.getChildren().addAll(vbox, infoBubble, sortBox, searchBox, backButton);\r\n\r\n        Scene scene = new Scene(root, stage.getWidth(), stage.getHeight());\r\n        stage.setScene(scene);\r\n        stage.setTitle(\"Team and Players Info\");\r\n        stage.show();\r\n    }\r\n\r\n    private void sortPlayers(String criteria) {\r\n        switch (criteria) {\r\n            case \"Number\":\r\n                players.sort(Comparator.comparingInt(Player::getNumber));\r\n                break;\r\n            case \"Age\":\r\n                players.sort(Comparator.comparingInt(Player::getAge));\r\n                break;\r\n            case \"Name\":\r\n                players.sort(Comparator.comparing(Player::getName));\r\n                break;\r\n        }\r\n        displayPlayers();\r\n    }\r\n\r\n    private void displayPlayers() {\r\n        playersBox.getChildren().clear();\r\n        for (Player player : players) {\r\n            VBox playerBox = new VBox(5);\r\n            playerBox.setStyle(\"-fx-alignment: center;\");\r\n\r\n            ImageView playerImage = new ImageView(new Image(player.getPhoto(), true));\r\n            playerImage.setFitWidth(80);\r\n            playerImage.setFitHeight(80);\r\n\r\n            Label playerLabel = new Label(player.getName() + \"  #\" + player.getNumber());\r\n            playerLabel.setMaxWidth(100);\r\n            playerLabel.setWrapText(true);\r\n            playerLabel.setStyle(\"-fx-text-alignment: center;\");\r\n\r\n            playerImage.setOnMouseClicked(e -> {\r\n                try {\r\n                    openPlayerWindow(player.getId(), previousStage);\r\n                } catch (Exception ex) {\r\n                    throw new RuntimeException(ex);\r\n                }\r\n            });\r\n\r\n            playerBox.getChildren().addAll(playerImage, playerLabel);\r\n            playersBox.getChildren().add(playerBox);\r\n        }\r\n    }\r\n\r\n    private void openPlayerWindow(int playerId, Stage stage) throws NoInternetConnectionException{\r\n        try {\r\n            PlayerWindow playerWindow = new PlayerWindow(playerId, stage);\r\n            Stage playerStage = new Stage();\r\n            playerStage.setWidth(stage.getWidth());\r\n            playerStage.setHeight(stage.getHeight());\r\n            playerWindow.start(playerStage);\r\n            stage.hide();\r\n        } catch (NoInternetConnectionException e) {\r\n            showErrorPopup(\"Connection Error\", \"No internet connection. Please check your network and try again.\");\r\n        } catch (Exception e) {\r\n            showErrorPopup(\"Error\", \"Failed to open player details.\");\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n}\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/Vizualization/TeamWindow.java b/src/main/java/Vizualization/TeamWindow.java
--- a/src/main/java/Vizualization/TeamWindow.java	
+++ b/src/main/java/Vizualization/TeamWindow.java	
@@ -105,21 +105,21 @@
         AnchorPane.setRightAnchor(vbox, 0.0);
         AnchorPane.setBottomAnchor(vbox, 0.0);
 
+
         AnchorPane.setTopAnchor(infoBubble, 10.0);
         AnchorPane.setRightAnchor(infoBubble, 10.0);
 
-        AnchorPane.setLeftAnchor(sortBox, 10.0);
-        AnchorPane.setTopAnchor(sortBox, 45.0);
 
-        AnchorPane.setLeftAnchor(searchBox, 10.0);
-        AnchorPane.setTopAnchor(searchBox, 110.0); // Pod sortBox
+        VBox  util =  new VBox();
+        util.getChildren().addAll(backButton,sortBox,searchBox,searchButton);
 
-        AnchorPane.setLeftAnchor(backButton, 10.0);
-        AnchorPane.setTopAnchor(backButton, 10.0);
+        AnchorPane.setLeftAnchor(util, 10.0);
+        AnchorPane.setTopAnchor(util, 10.0);
 
         root.getChildren().addAll(vbox, infoBubble, sortBox, searchBox, backButton);
 
         Scene scene = new Scene(root, stage.getWidth(), stage.getHeight());
+        scene.getStylesheets().add(getClass().getResource("/css/football-theme.css").toExternalForm());
         stage.setScene(scene);
         stage.setTitle("Team and Players Info");
         stage.show();
